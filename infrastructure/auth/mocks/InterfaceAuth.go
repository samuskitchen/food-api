// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"
	model "food-api/infrastructure/auth/model"

	mock "github.com/stretchr/testify/mock"
)

// InterfaceAuth is an autogenerated mock type for the InterfaceAuth type
type InterfaceAuth struct {
	mock.Mock
}

// CreateAuth provides a mock function with given fields: ctx, userId, details
func (_m *InterfaceAuth) CreateAuth(ctx context.Context, userId string, details *model.TokenDetails) error {
	ret := _m.Called(ctx, userId, details)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *model.TokenDetails) error); ok {
		r0 = rf(ctx, userId, details)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteRefresh provides a mock function with given fields: ctx, refreshUuid
func (_m *InterfaceAuth) DeleteRefresh(ctx context.Context, refreshUuid string) error {
	ret := _m.Called(ctx, refreshUuid)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, refreshUuid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteTokens provides a mock function with given fields: ctx, details
func (_m *InterfaceAuth) DeleteTokens(ctx context.Context, details *model.AccessDetails) error {
	ret := _m.Called(ctx, details)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.AccessDetails) error); ok {
		r0 = rf(ctx, details)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FetchAuth provides a mock function with given fields: ctx, tokenUuid
func (_m *InterfaceAuth) FetchAuth(ctx context.Context, tokenUuid string) (string, error) {
	ret := _m.Called(ctx, tokenUuid)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, tokenUuid)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, tokenUuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
